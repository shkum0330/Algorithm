#include <bits/stdc++.h>
using namespace std;
#define INF 999999999
typedef pair<int,int> pii;
int dist[1001];
vector<pii> d[1001];
int res=INF;
int n,m,t,s,g,h;
void dijkstra(int start){
    for (int i = 0; i <= n; i++) dist[i] = INF;
    dist[start] = 0;
    priority_queue<pii, vector<pii>, greater<pii>> pq;
    pq.push({ 0,start });
    while(!pq.empty()){
        int curr=pq.top().second; int currd=pq.top().first;

        pq.pop();
        for(auto i:d[curr]){
            int next=i.first; int nextd=i.second;
            if(dist[next]>currd+nextd){
                dist[next]=currd+nextd;
                pq.push({dist[next],next});
            }
        }
    }
}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr); cout.tie(nullptr);
    int T; cin>>T;
    while(t--) {
        cin >> n >> m >> t;
        cin >> s >> g >> h; // s: 출발지
        for (int i = 1; i <= m; i++) {
            int a, b, c;
            cin >> a >> b >> c;
            d[a].push_back({b, c});
            d[b].push_back({a, c});
        }
        int dest_candidate[t];
        for(int i=0;i<t;i++) {
            int a; cin>>a;
            dest_candidate[i] = a;
        }
    }
}